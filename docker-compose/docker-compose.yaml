version: "3.7"

services:

  db:
    container_name: db
    image: postgres:12.2
    restart: always
    environment:
      POSTGRES_DB: ${DATABASE}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - ${DATABASE_PORT}:5432

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:4.18
    restart: always
    depends_on:
     - db
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_USER}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: 80
    ports:
      - ${PGADMIN_PORT}:80

  web:
    container_name: web
    image: ${WEB_APP_IMAGE}
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${DATABASE}
      SPRING_DATASOURCE_USERNAME: ${DATABASE_USER}
      SPRING_DATASOURCE_PASSWORD: ${DATABASE_PASSWORD}
      SPRING_PROFILES_ACTIVE: docker
      PROCESS_INITEVERYMILLIS: 100
      PROCESS_MOVEEVERYMILLIS: 100
    depends_on:
      - db
      - logstash
    ports:
      - ${WEB_PORT}:8080
    logging:
      driver: gelf
      options:
        gelf-address: "udp://${HOST_IP}:${LOGSTASH_PORT_LOGGING_UDP}"
        tag: "web"

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    depends_on:
      - web
    volumes:
      - ${ROOT}/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:7.3.10
    container_name: grafana
    environment:
      - "GF_INSTALL_PLUGINS=jdbranham-diagram-panel,grafana-clock-panel,grafana-simple-json-datasource"
      - "GF_SECURITY_ADMIN_USER=${GRAFANA_USER}"
      - "GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}"
    depends_on:
      - prometheus
      - elasticsearch
    ports:
      - ${GRAFANA_PORT}:3000
    volumes:
      - ${ROOT}/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ${ROOT}/grafana/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ${ROOT}/grafana/dashboards:/var/lib/grafana/dashboards

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    environment:
      - discovery.type=single-node
    ports:
      - ${ELASTIC_PORT}:9200

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.6.2
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    ports:
      - ${KIBANA_PORT}:5601
    depends_on:
      - elasticsearch

  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:7.6.2
    links:
      - elasticsearch
    volumes:
      - type: bind
        source: ${ROOT}/logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    command: logstash -f /usr/share/logstash/pipeline
    ports:
      - ${LOGSTASH_PORT_LOGGING_UDP}:12201/udp
    depends_on:
      - elasticsearch